# ---------------------------------------------------------------------
# Single-column constraints.
# ---------------------------------------------------------------------

parameterized vars=(a int) index=(a) placeholders=(int)
a = $1
----
[/$1 - /$1]

parameterized vars=(a int) index=(a desc) placeholders=(int)
a = $1
----
[/$1 - /$1]

# Parameterized constraints require at least one placeholder.
parameterized vars=(a int) index=(a)
a = 1
----

# TODO: explain
parameterized vars=(a int) index=(a)
a = $1 AND a = 1
----
[/$1 - /$1]

# TODO: explain
parameterized vars=(a int) index=(a)
a = 1 AND a = $1
----

# TODO This one is ok as long as we have the remaining filter.
parameterized vars=(a int) index=(a) placeholders=(int, int)
a = $1 AND a = $2
----
[/$1 - /$1]

parameterized vars=(a int) index=(a) placeholders=(int, int)
a = $1 OR a = $2
----

# ---------------------------------------------------------------------
# Multi-column constraints.
# ---------------------------------------------------------------------

parameterized vars=(a int, b int) index=(a, b) placeholders=(int)
a = $1 AND b = 2
----
[/$1/2 - /$1/2]

parameterized vars=(a int, b int) index=(a, b) placeholders=(int)
a = 1 AND b = $1
----
[/1/$1 - /1/$1]

parameterized vars=(a int, b int, c INT) index=(a, b, c) placeholders=(int)
a = $1 AND b = 2 AND c = 3
----
[/$1/2/3 - /$1/2/3]

parameterized vars=(a int, b int, c INT) index=(a, b, c) placeholders=(int)
a = 1 AND b = $1 AND c = 3
----
[/1/$1/3 - /1/$1/3]

parameterized vars=(a int, b int, c INT) index=(a, b, c) placeholders=(int)
a = 1 AND b = 2 AND c = $1
----
[/1/2/$1 - /1/2/$1]

parameterized vars=(a int, b int, c INT) index=(a, b, c) placeholders=(int)
a = $1 AND b = $1 AND c = $1
----
[/$1/$1/$1 - /$1/$1/$1]

parameterized vars=(a int, b int, c INT) index=(a, b, c) placeholders=(int, int, int)
a = $1 AND b = $2 AND c = $3
----
[/$1/$2/$3 - /$1/$2/$3]

# ---------------------------------------------------------------------
# Constraints from IN expressions.
# ---------------------------------------------------------------------

parameterized vars=(a int, b int) index=(a, b) placeholders=(int)
a IN (1, 2, 3) AND b = $1
----
[/1/$1 - /1/$1]
[/2/$1 - /2/$1]
[/3/$1 - /3/$1]

parameterized vars=(a int, b int) index=(a, b) placeholders=(int)
a = $1 AND b IN (1, 2, 3)
----
[/$1/1 - /$1/1]
[/$1/2 - /$1/2]
[/$1/3 - /$1/3]

parameterized vars=(a int, b int, c int) index=(a, b, c) placeholders=(int, int)
a IN (1, 2, 3) AND b = $1 AND c = $2
----
[/1/$1/$2 - /1/$1/$2]
[/2/$1/$2 - /2/$1/$2]
[/3/$1/$2 - /3/$1/$2]

# TODO(mgartner): This constraint could be simplified to /$1/$2/1 - /$1/$2/3.
parameterized vars=(a int, b int, c int) index=(a, b, c) placeholders=(int, int)
a = $1 AND b = $2 AND c IN (1, 2, 3)
----
[/$1/$2/1 - /$1/$2/1]
[/$1/$2/2 - /$1/$2/2]
[/$1/$2/3 - /$1/$2/3]

parameterized vars=(a int, b int, c int) index=(a, b, c) placeholders=(int)
a IN (1, 2, 3) AND b IN (4, 5, 6) AND c = $1
----
[/1/4/$1 - /1/4/$1]
[/2/4/$1 - /2/4/$1]
[/3/4/$1 - /3/4/$1]
[/1/5/$1 - /1/5/$1]
[/2/5/$1 - /2/5/$1]
[/3/5/$1 - /3/5/$1]
[/1/6/$1 - /1/6/$1]
[/2/6/$1 - /2/6/$1]
[/3/6/$1 - /3/6/$1]

parameterized vars=(a int, b int, c int) index=(a, b, c) placeholders=(int)
a IN (1, 2, 3) AND b = $1 AND c IN (4, 5, 6)
----
[/1/$1/4 - /1/$1/4]
[/2/$1/4 - /2/$1/4]
[/3/$1/4 - /3/$1/4]
[/1/$1/5 - /1/$1/5]
[/2/$1/5 - /2/$1/5]
[/3/$1/5 - /3/$1/5]
[/1/$1/6 - /1/$1/6]
[/2/$1/6 - /2/$1/6]
[/3/$1/6 - /3/$1/6]

# Cannot generate parameterized constraint with placehold on RHS of IN.
parameterized vars=(a int, b int) index=(a, b) placeholders=(int)
a IN (1, 2, 3, $1) AND b = $1
----

# TODO: Should be nothing. Or should have correct remaining filter.
parameterized vars=(a int) index=(a) placeholders=(int)
a = $1 AND a = 1
----
[/$1 - /$1]

# parameterized vars=(a int) index=(a)
# a = $1
# ----
#
#
# parameterized vars=(a int, b int) index=(a)
# a = 1 AND b = 2
# ----


# index-constraints vars=(a int) index=(a)
# NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# false
# ----
#
# index-constraints vars=(a int) index=(a)
# true
# ----
# [ - ]
#
# index-constraints vars=(a int) index=(a)
# a
# ----
# [ - ]
# Remaining filter: a
#
# index-constraints vars=(a int) index=(a)
# a > 2
# ----
# [/3 - ]
#
# index-constraints vars=(a int) index=(a)
# NOT (a <= 2)
# ----
# [/3 - ]
#
# index-constraints vars=(a int) index=(a desc)
# a > 2
# ----
# [ - /3]
#
# index-constraints vars=(a int) index=(a)
# a >= 2
# ----
# [/2 - ]
#
# index-constraints vars=(a int) index=(a desc)
# a >= 2
# ----
# [ - /2]
#
# index-constraints vars=(a int not null) index=(a)
# a != 2
# ----
# [ - /1]
# [/3 - ]
#
# index-constraints vars=(a int not null) index=(a)
# NOT (a = 2)
# ----
# [ - /1]
# [/3 - ]
#
# index-constraints vars=(a int not null) index=(a desc)
# a != 2
# ----
# [ - /3]
# [/1 - ]
#
# index-constraints vars=(a int not null) index=(a)
# a < 2
# ----
# [ - /1]
#
# index-constraints vars=(a int not null) index=(a desc)
# a < 2
# ----
# [/1 - ]
#
# index-constraints vars=(a int not null) index=(a)
# a = 2
# ----
# [/2 - /2]
#
# index-constraints vars=(a int not null) index=(a desc)
# a = 2
# ----
# [/2 - /2]
#
# index-constraints vars=(a int) index=(a)
# a != 2
# ----
# (/NULL - /1]
# [/3 - ]
#
# index-constraints vars=(a int) index=(a desc)
# a != 2
# ----
# [ - /3]
# [/1 - /NULL)
#
# index-constraints vars=(a int) index=(a)
# a < 2
# ----
# (/NULL - /1]
#
# index-constraints vars=(a int) index=(a desc)
# a < 2
# ----
# [/1 - /NULL)
#
# index-constraints vars=(a int) index=(a)
# a = 2
# ----
# [/2 - /2]
#
# index-constraints vars=(a int) index=(a desc)
# a = 2
# ----
# [/2 - /2]
#
# index-constraints vars=(a int) index=(a)
# NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a > NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a < NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a >= NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a >= NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a = NULL
# ----
#
# index-constraints vars=(a int) index=(a)
# a != NULL
# ----
#
# index-constraints vars=(a bool) index=(a)
# a
# ----
# [/true - /true]
#
# index-constraints vars=(a bool) index=(a)
# NOT a
# ----
# [/false - /false]
#
# index-constraints vars=(a bool) index=(a)
# a != true
# ----
# [/false - /false]
#
# index-constraints vars=(a bool) index=(a)
# a != false
# ----
# [/true - /true]
#
# index-constraints vars=(a bool) index=(a)
# a IS TRUE
# ----
# [/true - /true]
#
# index-constraints vars=(a bool) index=(a)
# a IS FALSE
# ----
# [/false - /false]
#
# index-constraints vars=(a bool) index=(a)
# a IS NOT TRUE
# ----
# [ - /false]
#
# index-constraints vars=(a bool) index=(a)
# a IS NOT FALSE
# ----
# [ - /false)
# [/true - ]
#
# index-constraints vars=(a int) index=(a)
# a IS NOT DISTINCT FROM 5
# ----
# [/5 - /5]
#
# index-constraints vars=(a int) index=(a)
# a IS DISTINCT FROM 5
# ----
# [ - /4]
# [/6 - ]
#
# index-constraints vars=(a bool) index=(a desc)
# a != true
# ----
# [/false - /false]
#
# index-constraints vars=(a bool) index=(a desc)
# a != false
# ----
# [/true - /true]
#
# index-constraints vars=(a bool) index=(a desc)
# a IS TRUE
# ----
# [/true - /true]
#
# index-constraints vars=(a bool) index=(a desc)
# a IS FALSE
# ----
# [/false - /false]
#
# index-constraints vars=(a bool) index=(a desc)
# a IS NOT TRUE
# ----
# [/false - ]
#
# index-constraints vars=(a bool) index=(a desc)
# a IS NOT FALSE
# ----
# [ - /true]
# (/false - ]
#
# index-constraints vars=(a int) index=(a desc)
# a IS NOT DISTINCT FROM 5
# ----
# [/5 - /5]
#
# index-constraints vars=(a int) index=(a)
# a = -1
# ----
# [/-1 - /-1]
#
# index-constraints vars=(a decimal) index=(a)
# a = -2.0
# ----
# [/-2.0 - /-2.0]
#
# index-constraints vars=(a int) index=(a desc)
# a IS DISTINCT FROM 5
# ----
# [ - /6]
# [/4 - ]
#
# index-constraints vars=(a bool not null) index=(a)
# a IS NOT TRUE
# ----
# [ - /false]
#
# index-constraints vars=(a bool not null) index=(a)
# a IS NOT FALSE
# ----
# [/true - ]
#
# index-constraints vars=(a bool not null) index=(a desc)
# a IS NOT TRUE
# ----
# [/false - ]
#
# index-constraints vars=(a bool not null) index=(a desc)
# a IS NOT FALSE
# ----
# [ - /true]
